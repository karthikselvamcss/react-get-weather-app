{"version":3,"sources":["images/app_logo.png","components/Titles.js","components/DataList.js","components/Form.js","components/Weather.js","components/WeatherDetails.js","components/Footer.js","data/ISO_CountryList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Titles","props","react_default","a","createElement","role","className","src","app_logo","alt","DataList","console","log","hidden","htmlFor","aria-label","aria-required","placeholder","list","id","name","required","this","countryList","map","option","index","key","value","Component","Form","handleSubmit","e","preventDefault","city","document","getElementsByName","country","getElementById","_this","filter","toUpperCase","substr","length","onSubmit","countryCode","undefined","type","components_DataList","Weather","displayComponent","temperture","icon","condition","concat","error","incorrctCountryNameError","WeatherDetails","humidity","wind","Footer","href","COUNTRIES_OPTIONS","API_KEY","App","state","cityInput","countryInput","getLocations","countryNameError","setState","delayState","_this2","setTimeout","fetchWeather","_callee","api_call","response","regenerator_default","wrap","_context","prev","next","fetch","sent","json","message","cod","main","temp","weather","description","speed","deg","t0","stop","_this3","prevProps","prevState","components_Titles","components_Form","components_Weather","components_WeatherDetails","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3666b04f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app_logo.bc4c0374.png\";","import React from \"react\";\r\nimport app_logo from '../images/app_logo.png';\r\n\r\n// const logo = '../images/app_logo.png';\r\n\r\nfunction Titles(props) {\r\n    return(\r\n        <header role=\"banner\" className=\"titles-Wrapper\">\r\n            <div className=\"logo-img\">\r\n                <img className=\"logo-app\" src={app_logo} alt=\"get weather app logo\"/>\r\n            </div>\r\n            <h1>Get temperature, expections and more...</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Titles;","import React, {Component} from 'react';\r\n\r\nclass DataList extends Component {\r\n\r\n    componentDidMount() {\r\n        console.log('DataList componentDidMount');        \r\n    }\r\n\r\n    render() {\r\n        console.log('DataList render');        \r\n\r\n        return(\r\n            <div className=\"form-row\">\r\n                <label hidden htmlFor=\"countries\">Choose a country</label>\r\n                <span className=\"required-style\">* </span>\r\n                {/* input field of datalist holds the option that is selected in the datalist */}\r\n                <input \r\n                    aria-label=\"Search by country name\"\r\n                    aria-required=\"true\"\r\n                    placeholder=\"Start typing country\"\r\n                    className=\"form-text\" \r\n                    list=\"countries\" \r\n                    id=\"mycountries\" \r\n                    name=\"mycountries\"\r\n                    required />\r\n                <datalist id=\"countries\">\r\n                    {this.props.countryList.map((option, index) => {return <option name=\"countryOption\" key={index} value={option.value}/>})}\r\n                </datalist>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataList;","import React, { Component } from \"react\";\r\nimport DataList from './DataList'\r\n\r\nclass Form extends Component {\r\n\r\n    // handle submit after user enter data and click submit btn\r\n    handleSubmit = (e) => {\r\n        // to prevent page refresh\r\n        e.preventDefault();\r\n        // get user inputs for city & country \r\n        let city = document.getElementsByName('city')[0].value;\r\n\r\n        // In a datalist you do not need the .selected command.\r\n        // input field of datalist holds the option that is selected in the datalist\r\n        let country = document.getElementById('mycountries').value;\r\n        let key = this.props.countryList.filter((option, index) => \r\n            {\r\n                // captilize country if user write its own choice and don't choose from datalist options\r\n                // to pass filter methode test \r\n                // to handle case TypeError: Cannot read property 'countryCode' of undefined\r\n                return option.value === country[0].toUpperCase() + (country).substr(1);\r\n            });\r\n        console.log(key, country);\r\n\r\n        //handle case : if user enter correct country value\r\n        if(key.length > 0) {\r\n            console.log('hi')\r\n            // pass user inputs as actions back to parent component <App />\r\n            this.props.onSubmit(city, key[0].countryCode, undefined);\r\n        //handle case app craches: if user enter incorrect country value\r\n        //UX: add error message\r\n        } else {\r\n            // pass user inputs as actions back to parent component <App />\r\n            this.props.onSubmit(city, undefined, '!Error: check country name again');\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Form componentDidMount');        \r\n    }\r\n\r\n    render() {\r\n        console.log('Form render');\r\n        return(\r\n            <section className=\"form-container\">\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                    <span className=\"required-style\">* </span>\r\n                        <input \r\n                        aria-label=\"Search by city name\"\r\n                        aria-required=\"true\"\r\n                        placeholder=\"Start typing city\" \r\n                        className=\"form-text\" \r\n                        type=\"text\" name=\"city\"\r\n                        required />\r\n                    </div>\r\n                    <DataList \r\n                        countryList={this.props.countryList}\r\n                    />\r\n                    <button className=\"sub-btn\" type=\"submit\">Get Weather</button>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction Weather(props) {\r\n    /* Weather component is display none by default */\r\n    /* add or remove Weather component depends on displayComponent state*/\r\n    /* if displayComponent === false component will be not displayed */\r\n    if (!props.displayComponent) {\r\n        return(\r\n            <section className=\"weather-wrapper\">\r\n                {/* add conditional operator for only rendering data if user click submit btn */}\r\n    \r\n                { \r\n                    props.city && props.country  && props.temperture && \r\n                    <div className=\"main-data\">\r\n                        <p className=\"temp\">{props.temperture}<sup className=\"degree\">o</sup></p>\r\n                        <div className=\"vertical-line\"></div>\r\n                        <p className=\"location\"> {props.city}, {props.country}</p>\r\n                    </div>\r\n    \r\n                }\r\n    \r\n                { props.icon && <img className=\"weather-icon\" alt={props.condition} src={`https://openweathermap.org/img/w/${props.icon}.png`} />}\r\n    \r\n                {props.error && <p role=\"alert\" className=\"error\">{props.error}</p>}\r\n\r\n                {props.incorrctCountryNameError && <p role=\"alert\" className=\"error\">{props.incorrctCountryNameError}</p>}\r\n    \r\n            </section>\r\n        );\r\n    /* if displayComponent === true component will be displayed */\r\n    } else {\r\n        return(\r\n            <section className=\"weather-wrapper display-component\">\r\n                {/* add conditional operator for only rendering data if user click submit btn */}\r\n    \r\n                { \r\n                    props.city && props.country  && props.temperture && \r\n                    <div className=\"main-data\">\r\n                        <p className=\"temp\">{props.temperture}<sup className=\"degree\">o</sup></p>\r\n                        <div className=\"vertical-line\"></div>\r\n                        <p className=\"location\"> {props.city}, {props.country}</p>\r\n                    </div>\r\n    \r\n                }\r\n    \r\n                { props.icon && <img className=\"weather-icon\" alt={props.condition} src={`https://openweathermap.org/img/w/${props.icon}.png`} />}\r\n    \r\n                {props.error && <p role=\"alert\" className=\"error\">{props.error}</p>}\r\n\r\n                {props.incorrctCountryNameError && <p role=\"alert\" className=\"error\">{props.incorrctCountryNameError}</p>}\r\n    \r\n            </section>\r\n        );\r\n    \r\n    }\r\n    \r\n}\r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nfunction WeatherDetails(props) {\r\n    /* WeatherDetails component is display none by default */\r\n    /* add or remove WeatherDetails component depends on displayComponent state*/\r\n    /* if displayComponent === false component will be not displayed */\r\n    if (!props.displayComponent) {\r\n        return(\r\n            \r\n            <div className=\"weather-details\">\r\n\r\n                { \r\n                    props.humidity && props.condition && props.wind[0] && props.wind[1] && \r\n                    <div>\r\n                        <p className=\"weather-data\"><span className=\"weather-title\">Humidity:</span> {props.humidity}</p> \r\n                        <p className=\"weather-data\"><span className=\"weather-title\">Conditions:</span> {props.condition}</p>\r\n                        <p className=\"weather-data\"><span className=\"weather-title\">Wind:</span> Speed: {props.wind[0]}, Degree: {props.wind[1]}</p>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    /* if displayComponent === true component will be displayed */\r\n    } else {\r\n        return(\r\n            \r\n            <div className=\"weather-details display-component\">\r\n\r\n                { \r\n                    props.humidity && props.condition && props.wind[0] && props.wind[1] && \r\n                    <div>\r\n                        <p className=\"weather-data\"><span className=\"weather-title\">Humidity:</span> {props.humidity}</p> \r\n                        <p className=\"weather-data\"><span className=\"weather-title\">Conditions:</span> {props.condition}</p>\r\n                        <p className=\"weather-data\"><span className=\"weather-title\">Wind:</span> Speed: {props.wind[0]}, Degree: {props.wind[1]}</p>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default WeatherDetails;","import React from \"react\";\r\n\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <footer role=\"contentinfo\" className=\"footer\">\r\n             <p>Copyright © Get Weather - data sources/APIs used <a href=\"https://openweathermap.org/appid#use\"> OpenWeatherMap API</a></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// from www.freeformatter.com\r\n// https://www.freeformatter.com/iso-country-list-html-select.html?fbclcountryCode=IwAR1zuJEnwB2YPgs1bL2yfTyTLp_YA13uSn-Rgs8OSuDbygk-uagir7JbSyA#alpha2\r\n\r\nexport const COUNTRIES_OPTIONS = [\r\n\t{ countryCode : \"AF\" ,  value : \"Afghanistan\" },\r\n\t{ countryCode : \"AX\" ,  value : \"Åland Islands\" },\r\n\t{ countryCode : \"AL\" ,  value : \"Albania\" },\r\n\t{ countryCode : \"DZ\" ,  value : \"Algeria\" },\r\n\t{ countryCode : \"AS\" ,  value : \"American Samoa\" },\r\n\t{ countryCode : \"AD\" ,  value : \"Andorra\" },\r\n\t{ countryCode : \"AO\" ,  value : \"Angola\" },\r\n\t{ countryCode : \"AI\" ,  value : \"Anguilla\" },\r\n\t{ countryCode : \"AQ\" ,  value : \"Antarctica\" },\r\n\t{ countryCode : \"AG\" ,  value : \"Antigua and Barbuda\" },\r\n\t{ countryCode : \"AR\" ,  value : \"Argentina\" },\r\n\t{ countryCode : \"AM\" ,  value : \"Armenia\" },\r\n\t{ countryCode : \"AW\" ,  value : \"Aruba\" },\r\n\t{ countryCode : \"AU\" ,  value : \"Australia\" },\r\n\t{ countryCode : \"AT\" ,  value : \"Austria\" },\r\n\t{ countryCode : \"AZ\" ,  value : \"Azerbaijan\" },\r\n\t{ countryCode : \"BS\" ,  value : \"Bahamas\" },\r\n\t{ countryCode : \"BH\" ,  value : \"Bahrain\" },\r\n\t{ countryCode : \"BD\" ,  value : \"Bangladesh\" },\r\n\t{ countryCode : \"BB\" ,  value : \"Barbados\" },\r\n\t{ countryCode : \"BY\" ,  value : \"Belarus\" },\r\n\t{ countryCode : \"BE\" ,  value : \"Belgium\" },\r\n\t{ countryCode : \"BZ\" ,  value : \"Belize\" },\r\n\t{ countryCode : \"BJ\" ,  value : \"Benin\" },\r\n\t{ countryCode : \"BM\" ,  value : \"Bermuda\" },\r\n\t{ countryCode : \"BT\" ,  value : \"Bhutan\" },\r\n\t{ countryCode : \"BO\" ,  value : \"Bolivia, Plurinational State of\" },\r\n\t{ countryCode : \"BQ\" ,  value : \"Bonaire, Sint Eustatius and Saba\" },\r\n\t{ countryCode : \"BA\" ,  value : \"Bosnia and Herzegovina\" },\r\n\t{ countryCode : \"BW\" ,  value : \"Botswana\" },\r\n\t{ countryCode : \"BV\" ,  value : \"Bouvet Island\" },\r\n\t{ countryCode : \"BR\" ,  value : \"Brazil\" },\r\n\t{ countryCode : \"IO\" ,  value : \"British Indian Ocean Territory\" },\r\n\t{ countryCode : \"BN\" ,  value : \"Brunei Darussalam\" },\r\n\t{ countryCode : \"BG\" ,  value : \"Bulgaria\" },\r\n\t{ countryCode : \"BF\" ,  value : \"Burkina Faso\" },\r\n\t{ countryCode : \"BI\" ,  value : \"Burundi\" },\r\n\t{ countryCode : \"KH\" ,  value : \"Cambodia\" },\r\n\t{ countryCode : \"CM\" ,  value : \"Cameroon\" },\r\n\t{ countryCode : \"CA\" ,  value : \"Canada\" },\r\n\t{ countryCode : \"CV\" ,  value : \"Cape Verde\" },\r\n\t{ countryCode : \"KY\" ,  value : \"Cayman Islands\" },\r\n\t{ countryCode : \"CF\" ,  value : \"Central African Republic\" },\r\n\t{ countryCode : \"TD\" ,  value : \"Chad\" },\r\n\t{ countryCode : \"CL\" ,  value : \"Chile\" },\r\n\t{ countryCode : \"CN\" ,  value : \"China\" },\r\n\t{ countryCode : \"CX\" ,  value : \"Christmas Island\" },\r\n\t{ countryCode : \"CC\" ,  value : \"Cocos (Keeling) Islands\" },\r\n\t{ countryCode : \"CO\" ,  value : \"Colombia\" },\r\n\t{ countryCode : \"KM\" ,  value : \"Comoros\" },\r\n\t{ countryCode : \"CG\" ,  value : \"Congo\" },\r\n\t{ countryCode : \"CD\" ,  value : \"Congo, the Democratic Republic of the\" },\r\n\t{ countryCode : \"CK\" ,  value : \"Cook Islands\" },\r\n\t{ countryCode : \"CR\" ,  value : \"Costa Rica\" },\r\n\t{ countryCode : \"CI\" ,  value : \"Côte d'Ivoire\" },\r\n\t{ countryCode : \"HR\" ,  value : \"Croatia\" },\r\n\t{ countryCode : \"CU\" ,  value : \"Cuba\" },\r\n\t{ countryCode : \"CW\" ,  value : \"Curaçao\" },\r\n\t{ countryCode : \"CY\" ,  value : \"Cyprus\" },\r\n\t{ countryCode : \"CZ\" ,  value : \"Czech Republic\" },\r\n\t{ countryCode : \"DK\" ,  value : \"Denmark\" },\r\n\t{ countryCode : \"DJ\" ,  value : \"Djibouti\" },\r\n\t{ countryCode : \"DM\" ,  value : \"Dominica\" },\r\n\t{ countryCode : \"DO\" ,  value : \"Dominican Republic\" },\r\n\t{ countryCode : \"EC\" ,  value : \"Ecuador\" },\r\n\t{ countryCode : \"EG\" ,  value : \"Egypt\" },\r\n\t{ countryCode : \"SV\" ,  value : \"El Salvador\" },\r\n\t{ countryCode : \"GQ\" ,  value : \"Equatorial Guinea\" },\r\n\t{ countryCode : \"ER\" ,  value : \"Eritrea\" },\r\n\t{ countryCode : \"EE\" ,  value : \"Estonia\" },\r\n\t{ countryCode : \"ET\" ,  value : \"Ethiopia\" },\r\n\t{ countryCode : \"FK\" ,  value : \"Falkland Islands (Malvinas)\" },\r\n\t{ countryCode : \"FO\" ,  value : \"Faroe Islands\" },\r\n\t{ countryCode : \"FJ\" ,  value : \"Fiji\" },\r\n\t{ countryCode : \"FI\" ,  value : \"Finland\" },\r\n\t{ countryCode : \"FR\" ,  value : \"France\" },\r\n\t{ countryCode : \"GF\" ,  value : \"French Guiana\" },\r\n\t{ countryCode : \"PF\" ,  value : \"French Polynesia\" },\r\n\t{ countryCode : \"TF\" ,  value : \"French Southern Territories\" },\r\n\t{ countryCode : \"GA\" ,  value : \"Gabon\" },\r\n\t{ countryCode : \"GM\" ,  value : \"Gambia\" },\r\n\t{ countryCode : \"GE\" ,  value : \"Georgia\" },\r\n\t{ countryCode : \"DE\" ,  value : \"Germany\" },\r\n\t{ countryCode : \"GH\" ,  value : \"Ghana\" },\r\n\t{ countryCode : \"GI\" ,  value : \"Gibraltar\" },\r\n\t{ countryCode : \"GR\" ,  value : \"Greece\" },\r\n\t{ countryCode : \"GL\" ,  value : \"Greenland\" },\r\n\t{ countryCode : \"GD\" ,  value : \"Grenada\" },\r\n\t{ countryCode : \"GP\" ,  value : \"Guadeloupe\" },\r\n\t{ countryCode : \"GU\" ,  value : \"Guam\" },\r\n\t{ countryCode : \"GT\" ,  value : \"Guatemala\" },\r\n\t{ countryCode : \"GG\" ,  value : \"Guernsey\" },\r\n\t{ countryCode : \"GN\" ,  value : \"Guinea\" },\r\n\t{ countryCode : \"GW\" ,  value : \"Guinea-Bissau\" },\r\n\t{ countryCode : \"GY\" ,  value : \"Guyana\" },\r\n\t{ countryCode : \"HT\" ,  value : \"Haiti\" },\r\n\t{ countryCode : \"HM\" ,  value : \"Heard Island and McDonald Islands\" },\r\n\t{ countryCode : \"VA\" ,  value : \"Holy See (Vatican City State)\" },\r\n\t{ countryCode : \"HN\" ,  value : \"Honduras\" },\r\n\t{ countryCode : \"HK\" ,  value : \"Hong Kong\" },\r\n\t{ countryCode : \"HU\" ,  value : \"Hungary\" },\r\n\t{ countryCode : \"IS\" ,  value : \"Iceland\" },\r\n\t{ countryCode : \"IN\" ,  value : \"India\" },\r\n\t{ countryCode : \"countryCode\" ,  value : \"Indonesia\" },\r\n\t{ countryCode : \"IR\" ,  value : \"Iran, Islamic Republic of\" },\r\n\t{ countryCode : \"IQ\" ,  value : \"Iraq\" },\r\n\t{ countryCode : \"IE\" ,  value : \"Ireland\" },\r\n\t{ countryCode : \"IM\" ,  value : \"Isle of Man\" },\r\n\t{ countryCode : \"IL\" ,  value : \"Israel\" },\r\n\t{ countryCode : \"IT\" ,  value : \"Italy\" },\r\n\t{ countryCode : \"JM\" ,  value : \"Jamaica\" },\r\n\t{ countryCode : \"JP\" ,  value : \"Japan\" },\r\n\t{ countryCode : \"JE\" ,  value : \"Jersey\" },\r\n\t{ countryCode : \"JO\" ,  value : \"Jordan\" },\r\n\t{ countryCode : \"KZ\" ,  value : \"Kazakhstan\" },\r\n\t{ countryCode : \"KE\" ,  value : \"Kenya\" },\r\n\t{ countryCode : \"KI\" ,  value : \"Kiribati\" },\r\n\t{ countryCode : \"KP\" ,  value : \"Korea, Democratic People's Republic of\" },\r\n\t{ countryCode : \"KR\" ,  value : \"Korea, Republic of\" },\r\n\t{ countryCode : \"KW\" ,  value : \"Kuwait\" },\r\n\t{ countryCode : \"KG\" ,  value : \"Kyrgyzstan\" },\r\n\t{ countryCode : \"LA\" ,  value : \"Lao People's Democratic Republic\" },\r\n\t{ countryCode : \"LV\" ,  value : \"Latvia\" },\r\n\t{ countryCode : \"LB\" ,  value : \"Lebanon\" },\r\n\t{ countryCode : \"LS\" ,  value : \"Lesotho\" },\r\n\t{ countryCode : \"LR\" ,  value : \"Liberia\" },\r\n\t{ countryCode : \"LY\" ,  value : \"Libya\" },\r\n\t{ countryCode : \"LI\" ,  value : \"Liechtenstein\" },\r\n\t{ countryCode : \"LT\" ,  value : \"Lithuania\" },\r\n\t{ countryCode : \"LU\" ,  value : \"Luxembourg\" },\r\n\t{ countryCode : \"MO\" ,  value : \"Macao\" },\r\n\t{ countryCode : \"MK\" ,  value : \"Macedonia, the former Yugoslav Republic of\" },\r\n\t{ countryCode : \"MG\" ,  value : \"Madagascar\" },\r\n\t{ countryCode : \"MW\" ,  value : \"Malawi\" },\r\n\t{ countryCode : \"MY\" ,  value : \"Malaysia\" },\r\n\t{ countryCode : \"MV\" ,  value : \"Maldives\" },\r\n\t{ countryCode : \"ML\" ,  value : \"Mali\" },\r\n\t{ countryCode : \"MT\" ,  value : \"Malta\" },\r\n\t{ countryCode : \"MH\" ,  value : \"Marshall Islands\" },\r\n\t{ countryCode : \"MQ\" ,  value : \"Martinique\" },\r\n\t{ countryCode : \"MR\" ,  value : \"Mauritania\" },\r\n\t{ countryCode : \"MU\" ,  value : \"Mauritius\" },\r\n\t{ countryCode : \"YT\" ,  value : \"Mayotte\" },\r\n\t{ countryCode : \"MX\" ,  value : \"Mexico\" },\r\n\t{ countryCode : \"FM\" ,  value : \"Micronesia, Federated States of\" },\r\n\t{ countryCode : \"MD\" ,  value : \"Moldova, Republic of\" },\r\n\t{ countryCode : \"MC\" ,  value : \"Monaco\" },\r\n\t{ countryCode : \"MN\" ,  value : \"Mongolia\" },\r\n\t{ countryCode : \"ME\" ,  value : \"Montenegro\" },\r\n\t{ countryCode : \"MS\" ,  value : \"Montserrat\" },\r\n\t{ countryCode : \"MA\" ,  value : \"Morocco\" },\r\n\t{ countryCode : \"MZ\" ,  value : \"Mozambique\" },\r\n\t{ countryCode : \"MM\" ,  value : \"Myanmar\" },\r\n\t{ countryCode : \"NA\" ,  value : \"Namibia\" },\r\n\t{ countryCode : \"NR\" ,  value : \"Nauru\" },\r\n\t{ countryCode : \"NP\" ,  value : \"Nepal\" },\r\n\t{ countryCode : \"NL\" ,  value : \"Netherlands\" },\r\n\t{ countryCode : \"NC\" ,  value : \"New Caledonia\" },\r\n\t{ countryCode : \"NZ\" ,  value : \"New Zealand\" },\r\n\t{ countryCode : \"NI\" ,  value : \"Nicaragua\" },\r\n\t{ countryCode : \"NE\" ,  value : \"Niger\" },\r\n\t{ countryCode : \"NG\" ,  value : \"Nigeria\" },\r\n\t{ countryCode : \"NU\" ,  value : \"Niue\" },\r\n\t{ countryCode : \"NF\" ,  value : \"Norfolk Island\" },\r\n\t{ countryCode : \"MP\" ,  value : \"Northern Mariana Islands\" },\r\n\t{ countryCode : \"NO\" ,  value : \"Norway\" },\r\n\t{ countryCode : \"OM\" ,  value : \"Oman\" },\r\n\t{ countryCode : \"PK\" ,  value : \"Pakistan\" },\r\n\t{ countryCode : \"PW\" ,  value : \"Palau\" },\r\n\t{ countryCode : \"PS\" ,  value : \"Palestinian Territory, Occupied\" },\r\n\t{ countryCode : \"PA\" ,  value : \"Panama\" },\r\n\t{ countryCode : \"PG\" ,  value : \"Papua New Guinea\" },\r\n\t{ countryCode : \"PY\" ,  value : \"Paraguay\" },\r\n\t{ countryCode : \"PE\" ,  value : \"Peru\" },\r\n\t{ countryCode : \"PH\" ,  value : \"Philippines\" },\r\n\t{ countryCode : \"PN\" ,  value : \"Pitcairn\" },\r\n\t{ countryCode : \"PL\" ,  value : \"Poland\" },\r\n\t{ countryCode : \"PT\" ,  value : \"Portugal\" },\r\n\t{ countryCode : \"PR\" ,  value : \"Puerto Rico\" },\r\n\t{ countryCode : \"QA\" ,  value : \"Qatar\" },\r\n\t{ countryCode : \"RE\" ,  value : \"Réunion\" },\r\n\t{ countryCode : \"RO\" ,  value : \"Romania\" },\r\n\t{ countryCode : \"RU\" ,  value : \"Russian Federation\" },\r\n\t{ countryCode : \"RW\" ,  value : \"Rwanda\" },\r\n\t{ countryCode : \"BL\" ,  value : \"Saint Barthélemy\" },\r\n\t{ countryCode : \"SH\" ,  value : \"Saint Helena, Ascension and Tristan da Cunha\" },\r\n\t{ countryCode : \"KN\" ,  value : \"Saint Kitts and Nevis\" },\r\n\t{ countryCode : \"LC\" ,  value : \"Saint Lucia\" },\r\n\t{ countryCode : \"MF\" ,  value : \"Saint Martin (French part)\" },\r\n\t{ countryCode : \"PM\" ,  value : \"Saint Pierre and Miquelon\" },\r\n\t{ countryCode : \"VC\" ,  value : \"Saint Vincent and the Grenadines\" },\r\n\t{ countryCode : \"WS\" ,  value : \"Samoa\" },\r\n\t{ countryCode : \"SM\" ,  value : \"San Marino\" },\r\n\t{ countryCode : \"ST\" ,  value : \"Sao Tome and Principe\" },\r\n\t{ countryCode : \"SA\" ,  value : \"Saudi Arabia\" },\r\n\t{ countryCode : \"SN\" ,  value : \"Senegal\" },\r\n\t{ countryCode : \"RS\" ,  value : \"Serbia\" },\r\n\t{ countryCode : \"SC\" ,  value : \"Seychelles\" },\r\n\t{ countryCode : \"SL\" ,  value : \"Sierra Leone\" },\r\n\t{ countryCode : \"SG\" ,  value : \"Singapore\" },\r\n\t{ countryCode : \"SX\" ,  value : \"Sint Maarten (Dutch part)\" },\r\n\t{ countryCode : \"SK\" ,  value : \"Slovakia\" },\r\n\t{ countryCode : \"SI\" ,  value : \"Slovenia\" },\r\n\t{ countryCode : \"SB\" ,  value : \"Solomon Islands\" },\r\n\t{ countryCode : \"SO\" ,  value : \"Somalia\" },\r\n\t{ countryCode : \"ZA\" ,  value : \"South Africa\" },\r\n\t{ countryCode : \"GS\" ,  value : \"South Georgia and the South Sandwich Islands\" },\r\n\t{ countryCode : \"SS\" ,  value : \"South Sudan\" },\r\n\t{ countryCode : \"ES\" ,  value : \"Spain\" },\r\n\t{ countryCode : \"LK\" ,  value : \"Sri Lanka\" },\r\n\t{ countryCode : \"SD\" ,  value : \"Sudan\" },\r\n\t{ countryCode : \"SR\" ,  value : \"Suriname\" },\r\n\t{ countryCode : \"SJ\" ,  value : \"Svalbard and Jan Mayen\" },\r\n\t{ countryCode : \"SZ\" ,  value : \"Swaziland\" },\r\n\t{ countryCode : \"SE\" ,  value : \"Sweden\" },\r\n\t{ countryCode : \"CH\" ,  value : \"Switzerland\" },\r\n\t{ countryCode : \"SY\" ,  value : \"Syrian Arab Republic\" },\r\n\t{ countryCode : \"TW\" ,  value : \"Taiwan, Province of China\" },\r\n\t{ countryCode : \"TJ\" ,  value : \"Tajikistan\" },\r\n\t{ countryCode : \"TZ\" ,  value : \"Tanzania, United Republic of\" },\r\n\t{ countryCode : \"TH\" ,  value : \"Thailand\" },\r\n\t{ countryCode : \"TL\" ,  value : \"Timor-Leste\" },\r\n\t{ countryCode : \"TG\" ,  value : \"Togo\" },\r\n\t{ countryCode : \"TK\" ,  value : \"Tokelau\" },\r\n\t{ countryCode : \"TO\" ,  value : \"Tonga\" },\r\n\t{ countryCode : \"TT\" ,  value : \"TrincountryCodead and Tobago\" },\r\n\t{ countryCode : \"TN\" ,  value : \"Tunisia\" },\r\n\t{ countryCode : \"TR\" ,  value : \"Turkey\" },\r\n\t{ countryCode : \"TM\" ,  value : \"Turkmenistan\" },\r\n\t{ countryCode : \"TC\" ,  value : \"Turks and Caicos Islands\" },\r\n\t{ countryCode : \"TV\" ,  value : \"Tuvalu\" },\r\n\t{ countryCode : \"UG\" ,  value : \"Uganda\" },\r\n\t{ countryCode : \"UA\" ,  value : \"Ukraine\" },\r\n\t{ countryCode : \"AE\" ,  value : \"United Arab Emirates\" },\r\n\t{ countryCode : \"GB\" ,  value : \"United Kingdom\" },\r\n\t{ countryCode : \"US\" ,  value : \"United States\" },\r\n\t{ countryCode : \"UM\" ,  value : \"United States Minor Outlying Islands\" },\r\n\t{ countryCode : \"UY\" ,  value : \"Uruguay\" },\r\n\t{ countryCode : \"UZ\" ,  value : \"Uzbekistan\" },\r\n\t{ countryCode : \"VU\" ,  value : \"Vanuatu\" },\r\n\t{ countryCode : \"VE\" ,  value : \"Venezuela, Bolivarian Republic of\" },\r\n\t{ countryCode : \"VN\" ,  value : \"Viet Nam\" },\r\n\t{ countryCode : \"VG\" ,  value : \"Virgin Islands, British\" },\r\n\t{ countryCode : \"VI\" ,  value : \"Virgin Islands, U.S.\" },\r\n\t{ countryCode : \"WF\" ,  value : \"Wallis and Futuna\" },\r\n\t{ countryCode : \"EH\" ,  value : \"Western Sahara\" },\r\n\t{ countryCode : \"YE\" ,  value : \"Yemen\" },\r\n\t{ countryCode : \"ZM\" ,  value : \"Zambia\" },\r\n\t{ countryCode : \"ZW\" ,  value : \"Zimbabwe\" },\r\n];","import React, { Component } from 'react';\nimport './App.css';\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport WeatherDetails from './components/WeatherDetails'\nimport Footer from './components/Footer'\nimport {COUNTRIES_OPTIONS} from './data/ISO_CountryList'\n\nconst API_KEY = '3b7d8b725e9415824bae9c91fae33399';\n\nclass App extends Component {\n\n  state = {\n    cityInput: undefined,\n    countryInput: undefined,\n    city: undefined,\n    country: undefined,\n    temperture: undefined,\n    humidity: undefined,\n    condition: undefined,\n    icon: undefined,\n    wind: [undefined,undefined],\n    error: undefined,\n    incorrctCountryNameError: undefined,\n    displayComponent: false,\n    countryList: []\n  }\n\n  //to get location from <Form /> (user inputs)\n  getLocations = (city, country, countryNameError) => {\n    //handle case: if user enter correct country value\n    if (country) {\n      // update location state due to user inputs\n      this.setState({\n        cityInput: city, countryInput: country\n      });\n    //handle case: if user enter incorrect country value\n    //UX: add error message\n    } else {\n      console.log(':(')\n      this.setState({\n        incorrctCountryNameError: countryNameError,\n        displayComponent: true,\n        error: undefined,\n        cityInput: city,\n        countryInput: country,\n        temperture: undefined,\n        humidity: undefined,\n        condition: undefined,\n        icon: undefined,\n        wind: [undefined,undefined],\n      });\n    }\n    \n    // handle case: that blind user enter another incorrect country input\n    // A11y: to get message read another time\n    this.delayState();\n  }\n\n  // to delay hiding incorrctCountryNameError\n  // A11y: to get message read another time \n  delayState= function() {\n    setTimeout(() => {\n      this.setState({incorrctCountryNameError: undefined});\n    }, 3000);\n  }\n  \n  // use - async await - approche to fetch data from openweathermap API\n  // add async before our function\n  fetchWeather = async (city, country) => {\n    try {\n      // add await before make a call\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&units=metric&APPID=${API_KEY}`);\n\n      // handle response using json() method to turn response into JSON\n      const response = await api_call.json();\n      console.log(response);\n      console.log(city, country);\n      console.log(response.message);\n      \n      // handle case: data is fecthed correctly\n      if (response.cod === \"200\") {\n        // update weather state after fetching data\n        this.setState( {\n          city: response.city.name,\n          country: response.city.country,\n          temperture : response.list[0].main.temp,\n          humidity: response.list[0].main.humidity,\n          condition: response.list[0].weather[0].description,\n          icon: response.list[0].weather[0].icon,\n          wind: [response.list[0].wind.speed, response.list[0].wind.deg],\n          error: undefined,\n          incorrctCountryNameError: undefined,\n          displayComponent: true\n        });\n        // handle case: user enter incorrect location\n        // simulate case: enter wrong locations\n        //UX: add error message\n       } else if (response.cod === \"404\") {\n          this.setState({\n            error : `!Error: ${response.message}, please check location inputs again`,\n            incorrctCountryNameError: undefined,\n            cityInput: undefined,\n            countryInput: undefined,\n            city: undefined,\n            country: undefined,\n            temperture: undefined,\n            humidity: undefined,\n            condition: undefined,\n            icon: undefined,\n            wind: [undefined,undefined],\n            displayComponent: true\n           });\n\n        } else {\n        // handle case: if invalid API openweathermap key (Unauthorized error)\n        // if (response.cod === \"401\")\n        // simulate case: delete from API key\n        //UX: add error message\n          this.setState({\n            error : `!Error: ${response.message} `,\n            incorrctCountryNameError: undefined,\n            cityInput: undefined,\n            countryInput: undefined,\n            city: undefined,\n            country: undefined,\n            temperture: undefined,\n            humidity: undefined,\n            condition: undefined,\n            icon: undefined,\n            wind: [undefined,undefined],\n            displayComponent: true\n          });\n          \n        }\n\n    //handle case: if fetch request fails due to network issues or fetched url incorrect\n    // User is offline, DNS troubles, network errors\n    // simulate case: disconnect internet or delete anything from fetched url\n    //UX: add error message\n    } catch (error) {\n      this.setState({\n        cityInput: undefined,\n        countryInput: undefined,\n        city: undefined,\n        country: undefined,\n        temperture: undefined,\n        humidity: undefined,\n        condition: undefined,\n        icon: undefined,\n        wind: [undefined,undefined],\n        displayComponent: true,\n        error : `!Error: something went wrong with network`,\n        incorrctCountryNameError: undefined\n      });\n    }\n  \n  } \n\n  componentDidMount() {\n    console.log('App  componentDidMount')\n    this.setState({ countryList : COUNTRIES_OPTIONS }, \n      () => console.log(this.state.countryList));\n  }\n\n  // adding prevProps parameter corrected the multiple call issue\n  componentDidUpdate(prevProps, prevState) {\n      \n    \n    console.log('App componentDidUpdate', this.state.incorrctCountryNameError, this.state.displayComponent);\n    //check value countryInput !== undefined to make network request\n    //a network request may not be necessary if the state (locations user enterd) have not changed\n    if ((this.state.cityInput !== prevState.cityInput || this.state.countryInput !== prevState.countryInput) && this.state.countryInput !== undefined) {\n      \n      console.log(this.state.cityInput, prevState.cityInput);\n      console.log(this.state.countryInput, prevState.countryInput);\n      \n      // handle case: that blind user enter another incorrect input\n      // A11y: to get message read another time\n      if(this.state.error) {\n        this.setState({error : undefined});\n      }\n\n      this.fetchWeather(this.state.cityInput, this.state.countryInput);\n     \n    }\n    // else if ((this.state.cityInput !== prevState.cityInput || this.state.countryInput !== prevState.countryInput) && this.state.countryInput === undefined) {\n    //   if(!this.state.displayComponent) {\n    //     this.setState({displayComponent: true});\n    //   } else {\n    //     this.setState({displayComponent: false});\n    //   }\n  // }\n      \n  }\n  \n\n  render() {\n\n    console.log('App render');\n    return (\n      <div className=\"App\">\n      \n        <Titles />\n        <Form \n          onSubmit={this.getLocations}\n          countryList={this.state.countryList}\n        />\n        <Weather \n          city={this.state.city}\n          country={this.state.country}\n          temperture={this.state.temperture}\n          humidity={this.state.humidity}\n          condition={this.state.condition}\n          icon={this.state.icon}\n          wind={this.state.wind}\n          error={this.state.error}\n          incorrctCountryNameError={this.state.incorrctCountryNameError}\n          displayComponent={this.state.displayComponent}\n        />\n\n        <WeatherDetails \n          humidity={this.state.humidity}\n          condition={this.state.condition}\n          wind={this.state.wind}\n          displayComponent={this.state.displayComponent}\n        />\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//add core.js to support map array method for old browsers\n// https://reactjs.org/docs/javascript-environment-requirements.html\nimport 'core-js/library/es6/map';\n\n//React also depends on requestAnimationFrame (even in test environments) add raf polyfill\nimport 'raf/polyfill';\n\n// react polyfill to get async/await and fetch to work for IE browsers\nimport \"babel-polyfill\";\nimport \"isomorphic-fetch\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}